/*
 * NotePad.java
 *
 * Created on 2014/11/12, 22:55
 */

package main;


import java.awt.GridLayout;
import java.awt.Rectangle;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;


import javax.swing.JButton;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JTextArea;

/**
 *
 * @author  Oliver
 */
public class NotePad extends javax.swing.JFrame {

	/**
	 * V1.0
	 */
	private static final long serialVersionUID = 1L;


	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() 
	{
		ActionListener menuFileListener = new ActionListener() 
		{
			FileOpen fileOpen = new FileOpen();
			NotePad notePad = new NotePad();
			@Override
			public void actionPerformed(ActionEvent e) 
			{
				// TODO Auto-generated method stub
				String cmd = e.getActionCommand();
				if(cmd.equals("退出"))
				{
					System.exit(0);
				}
				else if(cmd.equals("新建"))
				{
					if(isSaved == false)
					{
						jTextAreaMain.setText("");
					}
				}
				else if(cmd.equals("打开"))
				{
					fileOpen.openFile(notePad);
					fileOpen.open();
					jTextAreaMain.setText("");
					jTextAreaMain.setText(fileOpen.getText());
				}
				else if(cmd.equals("保存"))
				{
					fileOpen.save(getEditArea(), notePad);
				}
				else if(cmd.equals("另存为"))
				{
					fileOpen.saveAs(getEditArea(), notePad);
				}
				else if(cmd.equals("剪切"))
				{
					String text = jTextAreaMain.getSelectedText();
					StringSelection selection = new StringSelection(text);
					clipBoard.setContents(selection, null);
					if(!"".equals(jTextAreaMain.getText()))
					{
						jTextAreaMain.setText("");
						//
					}
				}
				else if(cmd.equals("复制"))
				{
					String text = jTextAreaMain.getSelectedText();
					StringSelection selection = new StringSelection(text);
					clipBoard.setContents(selection, null);
				}
				else if(cmd.equals("粘贴"))
				{
					String text = null;
					Transferable contents;
					contents = clipBoard.getContents(this);
					if(contents == null)
					{
						return;
					}
					try 
					{
						text = (String)contents.getTransferData(DataFlavor.stringFlavor);
					} 
					catch (Exception e2) 
					{
						// TODO: handle exception
						e2.printStackTrace();
					}
					
					jTextAreaMain.replaceSelection(text);
					StringSelection selection = new StringSelection("");
					clipBoard.setContents(selection, null);
				}
				else if(cmd.equals("全选"))
				{
					jTextAreaMain.selectAll();
				}
				else if(cmd.equals("关于记事本"))
				{
					//跳出关于对话框
					JFrame aboutFrame = new JFrame("关于");
					aboutFrame.setBounds(new Rectangle(300, 300));
					
					aboutFrame.setDefaultCloseOperation(EXIT_ON_CLOSE);
					aboutFrame.setEnabled(true);
					aboutFrame.setVisible(true);
					aboutFrame.setAlwaysOnTop(true);
					JButton Ensure = new JButton("确定");
					aboutFrame.add(Ensure);
					Ensure.setLocation(200, 150);
					
				}
				//TODO
			}
		};

		exitItem.addActionListener(menuFileListener);
		newItem.addActionListener(menuFileListener);
		openItem.addActionListener(menuFileListener);
		saveItem.addActionListener(menuFileListener);
		saveAsItem.addActionListener(menuFileListener);
		//增加监听事件
		file.add(newItem);
		file.add(openItem);
		file.add(saveItem);
		file.add(saveAsItem);
		file.add(pageSetItem);
		file.add(printItem);
		file.add(exitItem);
		
		cutItem.addActionListener(menuFileListener);
		copyItem.addActionListener(menuFileListener);
		pasteItem.addActionListener(menuFileListener);
		selectAllItem.addActionListener(menuFileListener);
		edit.add(undoItem);
	    edit.add(cutItem);
	    edit.add(copyItem);
	    edit.add(pasteItem);
	    edit.add(deleteItem);
	    edit.add(lookItem);
	    edit.add(lookNextItem);
	    edit.add(replaceItem);
	    edit.add(toItem);
	    edit.add(selectAllItem);
		
	    format.add(autoLineItem);
	    format.add(fontItem);
	    
	    check.add(statusItem);
	    
	    help.add(checkHelpItem);
	    help.add(aboutItem);
	    
	   
	    
		jMenuBar1 = new javax.swing.JMenuBar();
		jMenuBar1.add(file);
	    jMenuBar1.add(edit);
	    jMenuBar1.add(format);
	    jMenuBar1.add(check);
	    jMenuBar1.add(help);
	    /*以上为菜单*/
	    
	    
		
		
		jMenuBar1.setName("NotePadMainMenu");
		jMenuBar1.setVisible(true);
		setJMenuBar(jMenuBar1);
		addWindowListener(new WindowListener() 
		{
			
			@Override
			public void windowOpened(WindowEvent e) 
			{
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void windowIconified(WindowEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void windowDeiconified(WindowEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void windowDeactivated(WindowEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void windowClosing(WindowEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void windowClosed(WindowEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void windowActivated(WindowEvent e) {
				// TODO Auto-generated method stub
				
			}
		});


		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("MyNotePad");
		setName("frameNotePad");
		setJMenuBar(jMenuBar1);
		setVisible(true);
		
		
		jTextAreaMain.setVisible(true);
		jTextAreaMain.setText("");
		
		this.add(jTextAreaMain);
		getContentPane().setLayout(new GridLayout());
		
		pack();
		
	}// </editor-fold>
	//GEN-END:initComponents

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) 
	{

		new NotePad().initComponents();
	}
	
	public JFrame getFrame()
	{
		return (JFrame)this;
	}
	
	public JTextArea getEditArea()
	{
		return jTextAreaMain;
	}
	
	public void SetEditArea(JTextArea jTextArea)
	{
		this.jTextAreaMain = jTextArea;
	}
	//GEN-BEGIN:variables
	// Variables declaration - do not modify

	private javax.swing.JMenuBar jMenuBar1;
	private boolean isSaved = false;
	Clipboard clipBoard = new Clipboard("");
	JMenu file = new JMenu("文件");
    JMenuItem newItem = new JMenuItem("新建");
    JMenuItem openItem = new JMenuItem("打开");
    JMenuItem saveItem = new JMenuItem("保存");
    JMenuItem saveAsItem = new JMenuItem("另存为");
    JMenuItem pageSetItem = new JMenuItem("页面设置");
    JMenuItem printItem = new JMenuItem("打印");
    JMenuItem exitItem = new JMenuItem("退出");
   
    JMenu edit = new JMenu("编辑");
    JMenuItem undoItem = new JMenuItem("撤销");
    JMenuItem cutItem = new JMenuItem("剪切");
    JMenuItem copyItem = new JMenuItem("复制");
    JMenuItem pasteItem = new JMenuItem("粘贴");
    JMenuItem deleteItem = new JMenuItem("删除");
    JMenuItem lookItem = new JMenuItem("查找");
    JMenuItem lookNextItem = new JMenuItem("查找下一个");
    JMenuItem replaceItem = new JMenuItem("替换");
    JMenuItem toItem = new JMenuItem("转到");
    JMenuItem selectAllItem = new JMenuItem("全选");
   
    JMenu format = new JMenu("格式");
    JCheckBoxMenuItem autoLineItem = new JCheckBoxMenuItem("自动换行");
    JMenuItem fontItem = new JMenuItem("字体");
   
    JMenu check = new JMenu("查看");
    JMenuItem statusItem = new JMenuItem("状态栏");
   
    JMenu help = new JMenu("帮助");
    JMenuItem checkHelpItem = new JMenuItem("查看帮助");
    JMenuItem aboutItem = new JMenuItem("关于记事本");
	
	JTextArea jTextAreaMain = new JTextArea(15, 30);
	
	AboutDialog about = new AboutDialog(getFrame(), true);
	// End of variables declaration//GEN-END:variables

}